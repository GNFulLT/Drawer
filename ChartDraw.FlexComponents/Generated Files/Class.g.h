// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.210806.1

#pragma once
#include "winrt/ChartDraw_FlexComponents.h"
namespace winrt::ChartDraw_FlexComponents::implementation
{
    template <typename D, typename... I>
    struct __declspec(empty_bases) Class_base : implements<D, ChartDraw_FlexComponents::Class, I...>
    {
        using base_type = Class_base;
        using class_type = ChartDraw_FlexComponents::Class;
        using implements_type = typename Class_base::implements_type;
        using implements_type::implements_type;
        
        hstring GetRuntimeClassName() const
        {
            return L"ChartDraw_FlexComponents.Class";
        }
    };
}
namespace winrt::ChartDraw_FlexComponents::factory_implementation
{
    template <typename D, typename T, typename... I>
    struct __declspec(empty_bases) ClassT : implements<D, winrt::Windows::Foundation::IActivationFactory, I...>
    {
        using instance_type = ChartDraw_FlexComponents::Class;

        hstring GetRuntimeClassName() const
        {
            return L"ChartDraw_FlexComponents.Class";
        }
        auto ActivateInstance() const
        {
            return make<T>();
        }
    };
}

#if defined(WINRT_FORCE_INCLUDE_CLASS_XAML_G_H) || __has_include("Class.xaml.g.h")
#include "Class.xaml.g.h"
#else

namespace winrt::ChartDraw_FlexComponents::implementation
{
    template <typename D, typename... I>
    using ClassT = Class_base<D, I...>;
}

#endif
